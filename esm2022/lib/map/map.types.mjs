export {};
/**
 * in typescript 4.1 DOM interface Position and Coordinates renamed to GeolocationPosition GeolocationCoordinates
 * to avoid deprecation angular version < 11.0.0 we declared own Coordinates, Position interface
 */
// export interface NgxMapboxGeolocationCoordinates {
//   readonly accuracy: number;
//   readonly altitude: number | null;
//   readonly altitudeAccuracy: number | null;
//   readonly heading: number | null;
//   readonly latitude: number;
//   readonly longitude: number;
//   readonly speed: number | null;
// }
// export interface Position {
//   coords: NgxMapboxGeolocationCoordinates;
//   target: GeolocateControl;
//   timestamp: number;
//   type: string;
// }
// export type MapImageData =
//   | HTMLImageElement
//   | ArrayBufferView
//   | { width: number; height: number; data: Uint8Array | Uint8ClampedArray }
//   | ImageData
//   | ImageBitmap;
// export interface MapImageOptions {
//   pixelRatio: number;
//   sdf: boolean;
// }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLnR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3gtbWFwYm94LWdsL3NyYy9saWIvbWFwL21hcC50eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBZ0ZBOzs7R0FHRztBQUVILHFEQUFxRDtBQUNyRCwrQkFBK0I7QUFDL0Isc0NBQXNDO0FBQ3RDLDhDQUE4QztBQUM5QyxxQ0FBcUM7QUFDckMsK0JBQStCO0FBQy9CLGdDQUFnQztBQUNoQyxtQ0FBbUM7QUFDbkMsSUFBSTtBQUVKLDhCQUE4QjtBQUM5Qiw2Q0FBNkM7QUFDN0MsOEJBQThCO0FBQzlCLHVCQUF1QjtBQUN2QixrQkFBa0I7QUFDbEIsSUFBSTtBQUVKLDZCQUE2QjtBQUM3Qix1QkFBdUI7QUFDdkIsc0JBQXNCO0FBQ3RCLDhFQUE4RTtBQUM5RSxnQkFBZ0I7QUFDaEIsbUJBQW1CO0FBRW5CLHFDQUFxQztBQUNyQyx3QkFBd0I7QUFDeEIsa0JBQWtCO0FBQ2xCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB0eXBlIHtcbiAgTWFwLFxuICBNYXBDb250ZXh0RXZlbnQsXG4gIE1hcERhdGFFdmVudCxcbiAgTWFwRXZlbnQsXG4gIE1hcEV2ZW50cyxcbiAgTWFwTW91c2VFdmVudCxcbiAgTWFwU291cmNlRGF0YUV2ZW50LFxuICBNYXBTdHlsZURhdGFFdmVudCxcbiAgTWFwVG91Y2hFdmVudCxcbiAgTWFwV2hlZWxFdmVudCxcbn0gZnJvbSAnbWFwYm94LWdsJztcblxuZXhwb3J0IGludGVyZmFjZSBOZ3hNYXBFdmVudCB7XG4gIG1hcFJlc2l6ZTogRXZlbnRFbWl0dGVyPE1hcEV2ZW50PjtcbiAgbWFwUmVtb3ZlOiBFdmVudEVtaXR0ZXI8TWFwRXZlbnQ+O1xuICBtYXBNb3VzZURvd246IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbWFwTW91c2VVcDogRXZlbnRFbWl0dGVyPE1hcE1vdXNlRXZlbnQ+O1xuICBtYXBNb3VzZU1vdmU6IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbWFwQ2xpY2s6IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbWFwRGJsQ2xpY2s6IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbWFwTW91c2VPdmVyOiBFdmVudEVtaXR0ZXI8TWFwTW91c2VFdmVudD47XG4gIG1hcE1vdXNlT3V0OiBFdmVudEVtaXR0ZXI8TWFwTW91c2VFdmVudD47XG4gIG1hcENvbnRleHRNZW51OiBFdmVudEVtaXR0ZXI8TWFwTW91c2VFdmVudD47XG4gIG1hcFRvdWNoU3RhcnQ6IEV2ZW50RW1pdHRlcjxNYXBUb3VjaEV2ZW50PjtcbiAgbWFwVG91Y2hFbmQ6IEV2ZW50RW1pdHRlcjxNYXBUb3VjaEV2ZW50PjtcbiAgbWFwVG91Y2hNb3ZlOiBFdmVudEVtaXR0ZXI8TWFwVG91Y2hFdmVudD47XG4gIG1hcFRvdWNoQ2FuY2VsOiBFdmVudEVtaXR0ZXI8TWFwVG91Y2hFdmVudD47XG4gIG1hcFdoZWVsOiBFdmVudEVtaXR0ZXI8TWFwV2hlZWxFdmVudD47XG4gIG1vdmVTdGFydDogRXZlbnRFbWl0dGVyPE1hcEV2ZW50c1snbW92ZXN0YXJ0J10+O1xuICBtb3ZlOiBFdmVudEVtaXR0ZXI8TWFwRXZlbnRzWydtb3ZlJ10+O1xuICBtb3ZlRW5kOiBFdmVudEVtaXR0ZXI8TWFwRXZlbnRzWydtb3ZlZW5kJ10+O1xuICBtYXBEcmFnU3RhcnQ6IEV2ZW50RW1pdHRlcjxNYXBFdmVudHNbJ2RyYWdzdGFydCddPjtcbiAgbWFwRHJhZzogRXZlbnRFbWl0dGVyPE1hcEV2ZW50c1snZHJhZyddPjtcbiAgbWFwRHJhZ0VuZDogRXZlbnRFbWl0dGVyPE1hcEV2ZW50c1snZHJhZ2VuZCddPjtcbiAgem9vbVN0YXJ0OiBFdmVudEVtaXR0ZXI8dm9pZD47XG4gIHpvb21FdnQ6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgem9vbUVuZDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICByb3RhdGVTdGFydDogRXZlbnRFbWl0dGVyPE1hcEV2ZW50c1sncm90YXRlc3RhcnQnXT47XG4gIHJvdGF0ZTogRXZlbnRFbWl0dGVyPE1hcEV2ZW50c1sncm90YXRlJ10+O1xuICByb3RhdGVFbmQ6IEV2ZW50RW1pdHRlcjxNYXBFdmVudHNbJ3JvdGF0ZWVuZCddPjtcbiAgcGl0Y2hTdGFydDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICBwaXRjaEV2dDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICBwaXRjaEVuZDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICBib3hab29tU3RhcnQ6IEV2ZW50RW1pdHRlcjxNYXBFdmVudHNbJ2JveHpvb21zdGFydCddPjtcbiAgYm94Wm9vbUVuZDogRXZlbnRFbWl0dGVyPE1hcEV2ZW50c1snYm94em9vbWVuZCddPjtcbiAgYm94Wm9vbUNhbmNlbDogRXZlbnRFbWl0dGVyPE1hcEV2ZW50c1snYm94em9vbWNhbmNlbCddPjtcbiAgd2ViR2xDb250ZXh0TG9zdDogRXZlbnRFbWl0dGVyPE1hcENvbnRleHRFdmVudD47XG4gIHdlYkdsQ29udGV4dFJlc3RvcmVkOiBFdmVudEVtaXR0ZXI8TWFwQ29udGV4dEV2ZW50PjtcbiAgbWFwTG9hZDogRXZlbnRFbWl0dGVyPE1hcEV2ZW50PjtcbiAgbWFwQ3JlYXRlOiBFdmVudEVtaXR0ZXI8TWFwPjtcbiAgcmVuZGVyOiBFdmVudEVtaXR0ZXI8dm9pZD47XG4gIG1hcEVycm9yOiBFdmVudEVtaXR0ZXI8RXJyb3I+O1xuICBkYXRhOiBFdmVudEVtaXR0ZXI8TWFwRGF0YUV2ZW50PjtcbiAgc3R5bGVEYXRhOiBFdmVudEVtaXR0ZXI8TWFwU3R5bGVEYXRhRXZlbnQ+O1xuICBzb3VyY2VEYXRhOiBFdmVudEVtaXR0ZXI8TWFwU291cmNlRGF0YUV2ZW50PjtcbiAgZGF0YUxvYWRpbmc6IEV2ZW50RW1pdHRlcjxNYXBEYXRhRXZlbnQ+O1xuICBzdHlsZURhdGFMb2FkaW5nOiBFdmVudEVtaXR0ZXI8TWFwU3R5bGVEYXRhRXZlbnQ+O1xuICBzb3VyY2VEYXRhTG9hZGluZzogRXZlbnRFbWl0dGVyPE1hcFNvdXJjZURhdGFFdmVudD47XG4gIHN0eWxlSW1hZ2VNaXNzaW5nOiBFdmVudEVtaXR0ZXI8eyBpZDogc3RyaW5nIH0+O1xuICBpZGxlOiBFdmVudEVtaXR0ZXI8dm9pZD47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGF5ZXJFdmVudHMge1xuICBsYXllckNsaWNrOiBFdmVudEVtaXR0ZXI8TWFwTW91c2VFdmVudD47XG4gIGxheWVyRGJsQ2xpY2s6IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbGF5ZXJNb3VzZURvd246IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbGF5ZXJNb3VzZVVwOiBFdmVudEVtaXR0ZXI8TWFwTW91c2VFdmVudD47XG4gIGxheWVyTW91c2VFbnRlcjogRXZlbnRFbWl0dGVyPE1hcE1vdXNlRXZlbnQ+O1xuICBsYXllck1vdXNlTGVhdmU6IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbGF5ZXJNb3VzZU1vdmU6IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbGF5ZXJNb3VzZU92ZXI6IEV2ZW50RW1pdHRlcjxNYXBNb3VzZUV2ZW50PjtcbiAgbGF5ZXJNb3VzZU91dDogRXZlbnRFbWl0dGVyPE1hcE1vdXNlRXZlbnQ+O1xuICBsYXllckNvbnRleHRNZW51OiBFdmVudEVtaXR0ZXI8TWFwTW91c2VFdmVudD47XG4gIGxheWVyVG91Y2hTdGFydDogRXZlbnRFbWl0dGVyPE1hcFRvdWNoRXZlbnQ+O1xuICBsYXllclRvdWNoRW5kOiBFdmVudEVtaXR0ZXI8TWFwVG91Y2hFdmVudD47XG4gIGxheWVyVG91Y2hDYW5jZWw6IEV2ZW50RW1pdHRlcjxNYXBUb3VjaEV2ZW50Pjtcbn1cblxuLyoqXG4gKiBpbiB0eXBlc2NyaXB0IDQuMSBET00gaW50ZXJmYWNlIFBvc2l0aW9uIGFuZCBDb29yZGluYXRlcyByZW5hbWVkIHRvIEdlb2xvY2F0aW9uUG9zaXRpb24gR2VvbG9jYXRpb25Db29yZGluYXRlc1xuICogdG8gYXZvaWQgZGVwcmVjYXRpb24gYW5ndWxhciB2ZXJzaW9uIDwgMTEuMC4wIHdlIGRlY2xhcmVkIG93biBDb29yZGluYXRlcywgUG9zaXRpb24gaW50ZXJmYWNlXG4gKi9cblxuLy8gZXhwb3J0IGludGVyZmFjZSBOZ3hNYXBib3hHZW9sb2NhdGlvbkNvb3JkaW5hdGVzIHtcbi8vICAgcmVhZG9ubHkgYWNjdXJhY3k6IG51bWJlcjtcbi8vICAgcmVhZG9ubHkgYWx0aXR1ZGU6IG51bWJlciB8IG51bGw7XG4vLyAgIHJlYWRvbmx5IGFsdGl0dWRlQWNjdXJhY3k6IG51bWJlciB8IG51bGw7XG4vLyAgIHJlYWRvbmx5IGhlYWRpbmc6IG51bWJlciB8IG51bGw7XG4vLyAgIHJlYWRvbmx5IGxhdGl0dWRlOiBudW1iZXI7XG4vLyAgIHJlYWRvbmx5IGxvbmdpdHVkZTogbnVtYmVyO1xuLy8gICByZWFkb25seSBzcGVlZDogbnVtYmVyIHwgbnVsbDtcbi8vIH1cblxuLy8gZXhwb3J0IGludGVyZmFjZSBQb3NpdGlvbiB7XG4vLyAgIGNvb3JkczogTmd4TWFwYm94R2VvbG9jYXRpb25Db29yZGluYXRlcztcbi8vICAgdGFyZ2V0OiBHZW9sb2NhdGVDb250cm9sO1xuLy8gICB0aW1lc3RhbXA6IG51bWJlcjtcbi8vICAgdHlwZTogc3RyaW5nO1xuLy8gfVxuXG4vLyBleHBvcnQgdHlwZSBNYXBJbWFnZURhdGEgPVxuLy8gICB8IEhUTUxJbWFnZUVsZW1lbnRcbi8vICAgfCBBcnJheUJ1ZmZlclZpZXdcbi8vICAgfCB7IHdpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyOyBkYXRhOiBVaW50OEFycmF5IHwgVWludDhDbGFtcGVkQXJyYXkgfVxuLy8gICB8IEltYWdlRGF0YVxuLy8gICB8IEltYWdlQml0bWFwO1xuXG4vLyBleHBvcnQgaW50ZXJmYWNlIE1hcEltYWdlT3B0aW9ucyB7XG4vLyAgIHBpeGVsUmF0aW86IG51bWJlcjtcbi8vICAgc2RmOiBib29sZWFuO1xuLy8gfVxuIl19